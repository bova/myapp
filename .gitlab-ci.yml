variables:
    CI_COMMIT_TAG: "latest"

stages:
  - image-build
  - deploy

#job name    
image-build:
  stage: image-build
  image: docker:latest
  tags:
    - docker-executor
  before_script:
    - echo $CI_COMMIT_TAG
    - echo $IMAGE_TAG
    - echo $CI_REGISTRY_USER
    - echo $DOCKER_USER
    - ls -lh; hostname; pwd
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD  docker.io
##    - docker login gitlab.bova-vp.ru:5050
  script:        
    - unset DOCKER_HOST
    - docker build -t vpovetkin/myapp:$CI_COMMIT_TAG .
    - docker push vpovetkin/myapp:$CI_COMMIT_TAG
##    - docker build -t gitlab.bova-vp.ru:5050/root/myapp .
##    - docker push gitlab.bova-vp.ru:5050/root/myapp

deploy-dev:
  stage: deploy
  image:
    name: quay.io/appuio/oc:v4.12
    entrypoint: ['']
  before_script:
    - echo $IMAGE
    - echo $CI_COMMIT_TAG
    - echo $CI_API_V4_URL
    - echo $CONFIG_ACCESS_TOKEN
    - echo $CI_COMMIT_BRANCH
  script:
##    - 'curl -v --insecure --header "PRIVATE-TOKEN: $CONFIG_ACCESS_TOKEN" "$CI_API_V4_URL/projects/1/repository/files/deployment%2Eyml/raw?ref=main" > deployment.yml'
    - sed -i "s~{IMAGE}~$CI_COMMIT_TAG~g" deployment.yml
    - cat deployment.yml

    - kubectl config use-context root/myapp:mydev
    - kubectl config get-contexts
    - kubectl get pods
##    - kubectl delete deployment myapp -n mydev-ns
    - kubectl apply -f deployment.yml -n mydev-ns
  rules:
##    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_TAG != null
  tags:
      - docker-executor    